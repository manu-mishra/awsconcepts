name: 'aws-concepts-app-infra-deploy-task'

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'envirnoment to deploy infrastructure'
        type: string
      aws-region-name:
          description: 'aws region to deploy infrastructure'
          type: string
          default: 'us-east-1'
      build-id:
        description: 'buildid'
        type: string
        default: ''
        required: false
    secrets:
        role-to-assume: 
          required: true
        role-session-name: 
          required: true

jobs:
  dev:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # assume IAM role to deploy
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{inputs.aws-region-name}}
        role-to-assume: ${{secrets.role-to-assume}}
        role-session-name: ${{secrets.role-session-name}}

   # initialize terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.6
    # update lambda build id is already defined
    - name: update buildid
      if: inputs.build-id !=''
      run: |
        cd Infrastructure/AwsConceptsApp/Environments/${{ inputs.environment-name }}
        echo -e "LAMBDA_API_BUILD_ID =\"${{ inputs.build-id }}\"\nLAMBDA_HASCODE_API = true" > Variables.tfvars
    # Deploy infrastructure
    - name: Terraform deploy
      run: |
        cd Infrastructure/AwsConceptsApp/Terraform
        terraform init -backend-config="bucket=a-us1-tf-${{ inputs.environment-name }}-mm" -backend-config="key=infrastructure/terraform.tfstate" -backend-config="region=us-east-1"
        terraform apply -auto-approve -var-file="../Environments/${{ inputs.environment-name }}/Static.tfvars" -var-file="../Environments/${{ inputs.environment-name }}/Variables.tfvars"
        terraform apply -auto-approve -var-file="../Environments/${{ inputs.environment-name }}/Static.tfvars" -var-file="../Environments/${{ inputs.environment-name }}/Variables.tfvars"
        outputs=$(terraform output -json)
        echo "$outputs"
   
